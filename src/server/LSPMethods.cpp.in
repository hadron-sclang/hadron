%{
// Generated file, please edit original file at src/server/LSPMethods.cpp.in
#include "server/LSPMethods.hpp"

#include <cstring>

#if _MSC_VER
// Disable MSVC warning on generated code.
#pragma warning(push)
#pragma warning(disable: 4267)
#elif __GNUC__ || __clang__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wmissing-field-initializers"
#pragma GCC diagnostic ignored "-Wregister"
#endif

namespace {

%}
%language=C++
%compare-strncmp
%struct-type
struct MethodPair { const char* name; server::lsp::Method method; };
%%
initialize,                         server::lsp::Method::kInitialize
initialized,                        server::lsp::Method::kInitialized
shutdown,                           server::lsp::Method::kShutdown
exit,                               server::lsp::Method::kExit
$/logTrace,                         server::lsp::Method::kLogTrace
$/setTrace,                         server::lsp::Method::kSetTrace
textDocument/semanticTokens/full,   server::lsp::Method::kSemanticTokensFull
hadron/compilationDiagnostics,      server::lsp::Method::kHadronCompilationDiagnostics
%%

} // namespace

#if _MSC_VER
#pragma warning(pop)
#elif __GNUC__ || __clang__
#pragma GCC diagnostic pop
#endif

namespace server {
namespace lsp {

Method getMethodNamed(const char* name, size_t length) {
    const MethodPair* pair = Perfect_Hash::in_word_set(name, length);
    if (!pair) {
        return Method::kNotFound;
    }
    return pair->method;
}

} // namespace lsp
} // namespace server
